config { 
  type: "table",
  schema: "staging",
  description: "Clean taxi trip data",
  bigquery: { 
        partitionBy: "trip_date",
            clusterBy: ["taxi_id"] } 
}

SELECT
  unique_key AS trip_id,
  taxi_id,
  trip_start_timestamp,
  trip_end_timestamp,
  trip_seconds,
  trip_miles,
  pickup_community_area,
  dropoff_community_area,
  fare,
  tips,
  tolls,
  extras,
  trip_total,
  payment_type,
  company,
  pickup_latitude,
  pickup_longitude,
  dropoff_latitude,
  dropoff_longitude,

  -- create date/time fields
  DATE(trip_start_timestamp) AS trip_date,
  EXTRACT(HOUR FROM trip_start_timestamp) AS trip_hour,-- get nearest hour time of ride
  
  CONCAT(
    CAST(EXTRACT(YEAR FROM trip_start_timestamp) AS STRING), 
    ' - ', 
    LPAD(CAST(EXTRACT(MONTH FROM trip_start_timestamp) AS STRING), 2, '0'), 
    ' (', 
    FORMAT_DATE('%B', PARSE_DATE('%m-%Y', CONCAT(CAST(EXTRACT(MONTH FROM trip_start_timestamp) AS STRING), '-', CAST(EXTRACT(YEAR FROM trip_start_timestamp) AS STRING)))), 
    ')'
  ) AS trip_month, --create sortable trip month column

  EXTRACT(DAYOFWEEK FROM trip_start_timestamp) AS trip_day_of_week,
  EXTRACT(DAYOFWEEK FROM trip_start_timestamp) IN (1,7) AS is_weekend,

  CASE 
    WHEN fare > 0 THEN SAFE_DIVIDE(tips, fare) * 100 -- use safe_divide to cater for 0 fares
    ELSE NULL 
  END as tip_rate, -- percentage of tips over fare
  
  CASE 
    WHEN trip_seconds > 0 AND trip_miles > 0 
    THEN (trip_miles / trip_seconds) * 3600
    ELSE NULL 
  END as avg_speed_mph

FROM
  ${ref("taxi_trips")}
WHERE 
  trip_start_timestamp >= '2022-01-01' -- assumption: using only data from 2022 and 2023
  AND trip_start_timestamp IS NOT NULL
  AND trip_end_timestamp IS NOT NULL
  AND taxi_id IS NOT NULL
  AND fare >= 0
  AND tips >= 0
  AND trip_seconds > 0
  AND trip_miles > 0
